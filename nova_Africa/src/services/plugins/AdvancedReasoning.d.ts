import { NovaPlugin } from '../../types';
export declare class AdvancedReasoning {
    private plugin;
    constructor();
    analyzeLogically(premise: string, conclusion: string): Promise<string>;
    decomposeroblem(problem: string): Promise<string>;
    analyzeCausality(event: string, context: string): Promise<string>;
    generateHypotheses(observation: string, domain: string): Promise<string>;
    evaluateArgument(argument: string): Promise<string>;
    analyzeDecision(decision: string, criteria: string[], alternatives: string[]): Promise<string>;
    assessRisk(scenario: string, timeframe: string): Promise<string>;
    planScenarios(situation: string, variables: string[]): Promise<string>;
    reasonEthically(dilemma: string, stakeholders: string[]): Promise<string>;
    thinkCreatively(challenge: string, constraints: string[]): Promise<string>;
    private identifyLogicalStructure;
    private assessValidity;
    private assessSoundness;
    private identifyFallacies;
    private evaluateArgumentStrength;
    private generateCounterarguments;
    private suggestImprovements;
    private classifyProblem;
    private breakDownProblem;
    private identifyDependencies;
    private identifyConstraints;
    private identifyRequiredResources;
    private suggestApproaches;
    private prioritizeSubproblems;
    private estimateTimeline;
    private identifyDirectCauses;
    private identifyIndirectCauses;
    private identifyRootCauses;
    private identifyContributingFactors;
    private constructCausalChain;
    private generateAlternativeExplanations;
    private assessCausalConfidence;
    private createHypotheses;
    private generateTestablePredictions;
    private analyzeArgumentStructure;
    private extractPremises;
    private extractConclusion;
    private weightCriteria;
    private scoreAlternatives;
    private assessRisks;
    private generateRecommendation;
    private identifyRiskFactors;
    private estimateProbability;
    private assessImpact;
    private calculateRiskLevel;
    private applyEthicalFrameworks;
    private brainstormSolutions;
    private applyAnalogies;
    getPlugin(): NovaPlugin;
}
export default AdvancedReasoning;
//# sourceMappingURL=AdvancedReasoning.d.ts.map